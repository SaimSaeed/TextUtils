{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","text1","trim","split","filter","word","join","length","Alert","alert","role","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","aboutText","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.4af1ec13.chunk.js","sourcesContent":["import React from \"react\"\r\nimport propTypes from \"prop-types\"\r\n// import { Link } from \"react-router-dom\";\r\nexport default function Navbar(props){\r\n    return(\r\n        <>\r\n        <nav className= {`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}` }>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a href=\"#\" className=\"nav-link\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={\"/about\"}>{props.aboutText}</Link>\r\n              </li> */}\r\n        \r\n             </ul>\r\n             <div className={`form-check form-switch text-${props.mode===\"dark\"? \"light\":\"dark\"}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n        </nav>\r\n\r\n\r\n        </>\r\n\r\n\r\n\r\n    );\r\n\r\nNavbar.propTypes = {\r\n    title: propTypes.string.isRequired,\r\n    aboutText: propTypes.string.isRequired\r\n\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title:\"Type Title Here\",\r\n    aboutText: \"Type About Here\"\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n","import React,{useState} from \"react\";\r\n\r\nexport default function TextForm(props){\r\n  \r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text Has Been Cleared\",\"success\");\r\n    }\r\n    const handleonChange= (event)=>{\r\n        console.log(\"on Change\")\r\nsetText(event.target.value);\r\n    }\r\n    const handleCopy=()=>{\r\n       var text = document.getElementById(\"myBox\");\r\n       text.select();\r\n       navigator.clipboard.writeText(text.value);\r\n       props.showAlert(\"Text is Copied\",\"success\");\r\n    }\r\n    const handleExtraSpaces= ()=>{\r\n        let text1 =text.trim().split('  ').filter(word=>word!=='');\r\n        setText(text1.join(' '));\r\n        props.showAlert(\"Extra Spaces are Removed\",\"success\");\r\n    }\r\n    const [text,setText] = useState(\"\");\r\n    return(\r\n<>\r\n<div className=\"container\">\r\n<h2  style={{color:props.mode===\"light\"? \"#042743\":\"white\"}}>{props.heading}</h2>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text}  style={{backgroundColor:props.mode===\"light\"? \"white\":\"grey\",color:props.mode===\"light\"? \"#042743\":\"white\"}}  onChange={handleonChange} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Covert to Uppercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Covert to Lowercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n</div>\r\n<div className=\"container my-3\" style={{color:props.mode===\"light\"? \"#042743\":\"white\"}}>\r\n<h2>Your Text Summary</h2>\r\n<p>{text.split(\" \").length} words and {text.length} characters</p>\r\n<p>{0.008* text.split(\" \").length} Minutes read</p>\r\n<h2>Preview</h2>\r\n<p>{text.length>0? text:\"Enter Your Text to Preview it Here\"}</p>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</>\r\n    );\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n      const  lower = word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    \r\n props.alert &&   <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n\r\n</div>\r\n\r\n  )\r\n}\r\n\r\nexport default Alert;","import './App.css';\n// import About from './components/About'\nimport Navbar from \"./components/Navbar\"\nimport TextForm from \"./components/TextForm\";\nimport React,{useState} from 'react';\nimport Alert from './components/Alert';\n// import ReactDOM from \"react-dom/client\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n const showAlert = (message,type)=>{\nsetAlert({\n  msg:message,\n  type:type\n})\nsetTimeout(() => {\n  setAlert(null)\n}, 1500);\n  }\n  const toggleMode = ()=>{\n    if(mode===\"light\"){\n      setMode(\"dark\")\n      document.body.style.backgroundColor=\"#042743\"\n      showAlert(\"Dark Mode has been Enabled!\", \"success\")\n      document.title=\"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title=\"TextUtils is Amazing!\";\n      // }, 2000);\n      \n    }\n    else{\n      setMode(\"light\")\n      document.body.style.backgroundColor=\"white\"\n      showAlert(\"Light Mode has been Enabled!\", \"success\")\n      document.title=\"TextUtils - Light Mode\";\n      // setInterval(() => {\n      //   document.title=\"TextUtils is Perfect!\";\n      // }, 1500);\n      \n    \n    }\n  }\n  \n\n  \n  return (\n    <>\n    {/* <Router> */}\n  <Navbar  title= \"TextUtils\" aboutText = \"About Us\" mode= {mode} toggleMode = {toggleMode}/>\n  <Alert alert={alert}/>\n  <div className='container my-3'>\n    {/* <Switch>\n<Route exact path={\"/about\"}>\n  <About/>\n</Route>\n<Route exact path={\"/\"} > */}\n<TextForm showAlert={showAlert}   heading= \"Enter Text to Analyze Below\"  mode= {mode}/>\n{/* </Route>\n</Switch> */}\n    </div>\n{/* </Router> */}\n\n</>\n  );\n  }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}